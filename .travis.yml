language: c++

branches:
  only:
    - master

dist: trusty

addons:
  apt:
    sources:
      - 'llvm-toolchain-trusty-3.9'
    packages:
      - 'clang-3.9'
      - 'libc++-dev'
      - 'xorg-dev'
      - 'mesa-utils'
      - 'libgl1-mesa-glx'
      - 'libgl1-mesa-dev'
      - 'mesa-common-dev'
      - 'xvfb'

env:
  global:
    - TERM: dumb
    - MESA_DEBUG: 1
    - LIBGL_DEBUG: 1
    - EGL_LOG_LEVEL: debug


matrix:
  include:

    # Xcode 8
    - os: osx
      env: SHARED=OFF
      osx_image: xcode8

    # clang 3.9
    - os: linux
      env: LLVM=3.9 SHARED=OFF
      compiler: "clang-3.9"

before_install:
  ############################################################################
  # Update OS X homebrew
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew update
    fi

  ############################################################################
  # Set build type to default Release value
  ############################################################################
  - if [[ "${BUILD_TYPE}" == "" ]]; then BUILD_TYPE=Release; fi

  ############################################################################
  # Set up default compiler versions and corresponding environment variables
  ############################################################################
  - if [[ "${LLVM}" == "default" ]]; then LLVM=3.9; fi
  - |
    if [[ "${LLVM}" != "" ]]; then
      export CXX=clang++-${LLVM}
      export CXXFLAGS=-stdlib=libc++
    fi
  - |
    if [[ "${GCC}" != "" ]]; then
      export CXX=g++-${GCC}
    fi
  - ${CXX} --version

  ############################################################################
  # Set up headless rendering
  ############################################################################
  - sudo apt-get purge fglrx
  - sudo add-apt-repository -y ppa:oibaf/graphics-drivers
  - sudo apt-get update -qq -y
  - sudo apt-get -yq --force-yes install libgl1-mesa-dev libgl1-mesa-glx mesa-common-dev libglapi-mesa libgbm1 libgl1-mesa-dri libxatracker-dev xvfb
  - export DISPLAY=:99
  - export LIBGL_ALWAYS_SOFTWARE=1
  - export LIBGL_PROFILE_CORE=1
  # - export GALLIUM_DRIVER=\"softpipe\"
  # - cat /etc/init.d/xvfb
  # - sh -e /etc/init.d/xvfb start
  # - sleep 2
  # - xpra --xvfb="Xorg +extension GLX +extension RANDR +extension RENDER -config `pwd`/res/config/dummy.xorg.conf -logfile ${HOME}/.xpra/xorg.log"  start :99
  # - sudo apt-get install -qq --force-yes mesa-utils libgl1-mesa-swx11 libgl1-mesa-swx11-dev xvfb
  - /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render
  - sleep 3
  - glxinfo

install:
  ############################################################################
  # All compiled dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew upgrade cmake || brew install cmake
    fi
  - cmake --version

# before_script:
  # - "xpra --xvfb=\"Xorg +extension GLX -config `pwd`/res/config/dummy.xorg.conf -logfile ${HOME}/.xpra/xorg.log\"  start :9"

script:
  ############################################################################
  # Build project and run tests
  ############################################################################
  - cd ${TRAVIS_BUILD_DIR}/run
  - ./unixConfigureAndBuild.sh -sf -t
  - testbin/testFlatland

notifications:
  on_success: never
  on_failure: never

